/**
 *  Copyright 2025 Angus.Fenying <fenying@litert.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/* eslint-disable */
/* Generated by @litert/typeguard (script: ../../tools/generate-args-validation-code.ts) */
import type * as dT from './ExecutorApiSchema';

export function isValidKillJobArgs(v_entry: any): v_entry is dT.IKillJobArgs {
    return ((typeof v_entry === "object" && v_entry !== null && !Array.isArray(v_entry))) && ((Number.isInteger(v_entry["jobId"])) && (v_entry["jobId"] >= 0))
}

export function isValidDetectJobArgs(v_entry: any): v_entry is dT.IDetectJobArgs {
    return ((typeof v_entry === "object" && v_entry !== null && !Array.isArray(v_entry))) && ((Number.isInteger(v_entry["jobId"])) && (v_entry["jobId"] >= 0))
}

export function isValidQueryJobLogArgs(v_entry: any): v_entry is dT.IQueryJobLogArgs {
    return ((typeof v_entry === "object" && v_entry !== null && !Array.isArray(v_entry))) && ((Number.isInteger(v_entry["logId"])) && (v_entry["logId"] >= 0)) && ((Number.isInteger(v_entry["logDateTim"])) && (v_entry["logDateTim"] >= 0)) && ((Number.isInteger(v_entry["fromLineNum"])) && (v_entry["fromLineNum"] >= 0))
}

export function isValidRunJobArgs(v_entry: any): v_entry is dT.IRunJobArgs {
    return ((typeof v_entry === "object" && v_entry !== null && !Array.isArray(v_entry))) && ((Number.isInteger(v_entry["jobId"])) && (v_entry["jobId"] >= 0)) && (typeof v_entry["executorHandler"] === "string") && ((typeof v_entry["executorParams"] === "string") || (v_entry["executorParams"] === null)) && (typeof v_entry["executorBlockStrategy"] === "string") && ((Number.isInteger(v_entry["executorTimeout"])) && (v_entry["executorTimeout"] >= 0)) && ((Number.isInteger(v_entry["logId"])) && (v_entry["logId"] >= 0)) && ((Number.isInteger(v_entry["logDateTime"])) && (v_entry["logDateTime"] >= 0)) && (typeof v_entry["glueType"] === "string") && ((typeof v_entry["glueSource"] === "string") || (v_entry["glueSource"] === null)) && ((Number.isInteger(v_entry["glueUpdatetime"])) && (v_entry["glueUpdatetime"] >= 0))
}

